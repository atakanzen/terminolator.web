{"version":3,"sources":["components/Navbar.js","components/Error.js","components/Loading.js","components/Success.js","App.js","index.js"],"names":["Navbar","className","href","rel","target","Error","role","Loading","Success","App","useState","loading","setLoading","error","setError","success","setSuccess","accept","maxFiles","maxSize","onDrop","acceptedFile","length","formdata","FormData","fileName","name","split","join","append","fetch","method","body","redirect","then","response","blob","result","fileDownload","replace","setTimeout","catch","console","log","getRootProps","getInputProps","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOAiBeA,MAff,WACI,OACI,qBAAKC,UAAU,gBAAf,SACI,qBAAKA,UAAU,+BAAf,SACA,sBAAKA,UAAU,+EAAf,UACI,qBAAKA,UAAU,oBAAf,SACQ,sBAAMA,UAAU,uCAAhB,SAAuD,oBAAGC,KAAK,IAAR,UAAY,sBAAMD,UAAU,kBAAhB,kBAAZ,kBAE3D,sBAAMA,UAAU,iDAAhB,SAAiE,mBAAGC,KAAK,6CAA6CC,IAAI,sBAAsBC,OAAO,SAAtF,mCCOtEC,MAff,WACE,OACE,sBACEJ,UAAU,oEACVK,KAAK,QAFP,UAIE,mBAAGL,UAAU,YAAb,2BACA,8FAC+D,uBAD/D,gCCESM,MATf,WACI,OACI,sBAAKN,UAAU,uEAAuEK,KAAK,QAA3F,UACI,mBAAGL,UAAU,YAAb,4BACA,oFCKGO,MATf,WACI,OACI,sBAAKP,UAAU,0EAA0EK,KAAK,QAA9F,UACI,mBAAGL,UAAU,YAAb,8BACA,2FC4FGQ,MA1Ff,WAAgB,IAAD,EACiBC,oBAAS,GAD1B,mBACNC,EADM,KACGC,EADH,OAEaF,oBAAS,GAFtB,mBAENG,EAFM,KAECC,EAFD,OAGiBJ,oBAAS,GAH1B,mBAGNK,EAHM,KAGGC,EAHH,KAKb,OACE,sBAAKf,UAAU,6DAAf,UACE,cAAC,EAAD,IACA,sBAAKA,UAAU,6CAAf,UACE,qBAAKA,UAAU,qBAAf,SACE,mBAAGA,UAAU,oCAAb,iEAIF,qBAAKA,UAAU,oHAAf,SACE,cAAC,IAAD,CACEgB,OAAO,OACPC,SAAU,EACVC,QAAS,KACTC,OAAQ,SAACC,GACP,GAAIA,EAAaC,OAAS,EAAG,CAC3BV,GAAW,GACX,IAAIW,EAAW,IAAIC,SACfC,EAAWJ,EAAa,GAAGK,KAAKC,MAAM,KAAKC,KAAK,KACpDL,EAASM,OAAO,OAAQR,EAAa,GAAII,GAQzCK,MAAM,QANe,CACnBC,OAAQ,OACRC,KAAMT,EACNU,SAAU,WAITC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACLzB,GAAW,GACX0B,IACED,EADU,UAEPZ,EAASc,QAAQ,OAAQ,gBAFlB,UAIZvB,GAAW,GACXwB,YAAW,WACTxB,GAAW,KACV,QAEJyB,OAAM,SAAC5B,GAAD,OAAW6B,QAAQC,IAAI,QAAS9B,WAEzCC,GAAS,GACT0B,YAAW,WACT1B,GAAS,KACR,MAnCT,SAuCG,gBAAG8B,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,cAAjB,OACC,yBAAS5C,UAAU,SAAnB,SACE,gDACM2C,EAAa,CACf3C,UACE,sDAHN,cAME,qCAAW4C,EAAc,CAAE5C,UAAW,aACtC,mBAAGA,UAAU,MAAb,yFASTY,GAAS,cAAC,EAAD,IACTF,GAAW,cAAC,EAAD,IACXI,GAAW,cAAC,EAAD,IACZ,qBAAKd,UAAU,8CAAf,SACE,oBACEC,KAAK,0BACLE,OAAO,SACPD,IAAI,sBAHN,uBAKY,sBAAMF,UAAU,eAAhB,oBALZ,gCC/EV6C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.96553b03.chunk.js","sourcesContent":["import React from 'react'\n\nfunction Navbar() {\n    return (\n        <nav className=\"bg-white pb-4\">\n            <div className=\"mx-auto px-4 sm:px-6 lg:px-8\">\n            <div className=\"flex items-center justify-between h-10 text-black border-b-2 border-gray-100\">\n                <div className=\"flex items-center\">\n                        <span className=\"font-semibold text-xl tracking-tight\"><a href=\"/\"><span className='text-indigo-600'>term</span>inolator</a></span>\n                </div>\n                    <span className=\"font-light text-base font-mono hover:underline\"><a href=\"https://github.com/ataknz/terminolator.web\" rel='noopener noreferrer' target='_blank'>github-repo</a></span>\n            </div>\n            </div>\n        </nav>\n    )\n}\n\nexport default Navbar\n","import React from \"react\";\n\nfunction Error() {\n  return (\n    <div\n      className=\"w-3/4 h-1/4 bg-red-200 border-l-4 border-red-500 text-red-500 p-3\"\n      role=\"alert\"\n    >\n      <p className=\"font-bold\">Upload Failed</p>\n      <p>\n        Please make sure you are using a file with \".txt\" extension. <br /> Max\n        file size is 15Kb\n      </p>\n    </div>\n  );\n}\n\nexport default Error;\n","import React from 'react'\n\nfunction Loading() {\n    return (\n        <div className=\"w-3/4 h-1/4 bg-blue-200 border-l-4 border-blue-500 text-blue-500 p-3\" role=\"alert\">\n            <p className=\"font-bold\">Uploading File</p>\n            <p>Please wait, your terminology is being created.</p>\n        </div>\n    )\n}\n\nexport default Loading\n","import React from 'react'\n\nfunction Success() {\n    return (\n        <div className=\"w-3/4 h-1/4 bg-green-200 border-l-4 border-green-500 text-green-500 p-3\" role=\"alert\">\n            <p className=\"font-bold\">Download succeed</p>\n            <p>Enjoy your terminology, please make sure to revise it.</p>\n        </div>\n    )\n}\n\nexport default Success\n","import fileDownload from \"js-file-download\";\nimport Dropzone from \"react-dropzone\";\nimport Navbar from \"./components/Navbar\";\nimport Error from \"./components/Error\";\nimport Loading from \"./components/Loading\";\nimport Success from \"./components/Success\";\nimport { useState } from \"react\";\n\nfunction App() {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [success, setSuccess] = useState(false);\n\n  return (\n    <div className=\"App mx-auto my-auto px-4 py-4 max-w-2xl min-w-min h-screen\">\n      <Navbar />\n      <div className=\"flex flex-col items-center h-2/3 space-y-6\">\n        <div className=\"w-3/4 h1/4 p-2 m-2\">\n          <p className=\"text-base font-medium text-center\">\n            End cumbersome process of creating a terminology.\n          </p>\n        </div>\n        <div className=\"flex flex-col items-center justify-center bg-gray-100 text-gray-500 shadow rounded-lg w-3/4 h-full cursor-pointer\">\n          <Dropzone\n            accept=\".txt\"\n            maxFiles={1}\n            maxSize={15000}\n            onDrop={(acceptedFile) => {\n              if (acceptedFile.length > 0) {\n                setLoading(true);\n                var formdata = new FormData();\n                var fileName = acceptedFile[0].name.split(\" \").join(\"_\");\n                formdata.append(\"file\", acceptedFile[0], fileName);\n\n                var requestOptions = {\n                  method: \"POST\",\n                  body: formdata,\n                  redirect: \"follow\",\n                };\n\n                fetch(\"/api/\", requestOptions)\n                  .then((response) => response.blob())\n                  .then((result) => {\n                    setLoading(false);\n                    fileDownload(\n                      result,\n                      `${fileName.replace(\".txt\", \"_terminology\")}.xlsx`\n                    );\n                    setSuccess(true);\n                    setTimeout(() => {\n                      setSuccess(false);\n                    }, 5000);\n                  })\n                  .catch((error) => console.log(\"error\", error));\n              } else {\n                setError(true);\n                setTimeout(() => {\n                  setError(false);\n                }, 5000);\n              }\n            }}\n          >\n            {({ getRootProps, getInputProps }) => (\n              <section className=\"h-full\">\n                <div\n                  {...getRootProps({\n                    className:\n                      \"flex flex-col items-center justify-center h-full\",\n                  })}\n                >\n                  <input {...getInputProps({ className: \"h-full\" })} />\n                  <p className=\"p-3\">\n                    Drag and drop a text file (\".txt\") here, or click to select\n                    one.\n                  </p>\n                </div>\n              </section>\n            )}\n          </Dropzone>\n        </div>\n        {error && <Error />}\n        {loading && <Loading />}\n        {success && <Success />}\n        <div className=\"text-indigo-600 font-medium hover:underline\">\n          <a\n            href=\"https://atakanzengin.me\"\n            target=\"_blank\"\n            rel=\"noreferrer noopener\"\n          >\n            Made with <span className=\"text-red-500\">&#9829;</span> by Atakan\n            Zengin\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}