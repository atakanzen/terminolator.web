{"version":3,"sources":["components/Navbar.js","components/Error.js","components/Loading.js","components/Success.js","App.js","index.js"],"names":["Navbar","className","href","rel","target","Error","role","Loading","Success","App","useState","loading","setLoading","error","setError","success","setSuccess","accept","maxFiles","maxSize","onDrop","acceptedFile","length","formdata","FormData","append","name","fetch","method","body","redirect","then","response","blob","result","fileDownload","replace","setTimeout","catch","console","log","getRootProps","getInputProps","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOAiBeA,MAff,WACI,OACI,qBAAKC,UAAU,gBAAf,SACI,qBAAKA,UAAU,+BAAf,SACA,sBAAKA,UAAU,+EAAf,UACI,qBAAKA,UAAU,oBAAf,SACQ,sBAAMA,UAAU,uCAAhB,SAAuD,oBAAGC,KAAK,IAAR,UAAY,sBAAMD,UAAU,kBAAhB,kBAAZ,kBAE3D,sBAAMA,UAAU,iDAAhB,SAAiE,mBAAGC,KAAK,6CAA6CC,IAAI,sBAAsBC,OAAO,SAAtF,mCCCtEC,MATf,WACI,OACI,sBAAKJ,UAAU,oEAAoEK,KAAK,QAAxF,UACI,mBAAGL,UAAU,YAAb,2BACA,iGCKGM,MATf,WACI,OACI,sBAAKN,UAAU,uEAAuEK,KAAK,QAA3F,UACI,mBAAGL,UAAU,YAAb,4BACA,oFCKGO,MATf,WACI,OACI,sBAAKP,UAAU,0EAA0EK,KAAK,QAA9F,UACI,mBAAGL,UAAU,YAAb,8BACA,2FCyEGQ,MAvEf,WAAgB,IAAD,EACiBC,oBAAS,GAD1B,mBACNC,EADM,KACGC,EADH,OAEaF,oBAAS,GAFtB,mBAENG,EAFM,KAECC,EAFD,OAGiBJ,oBAAS,GAH1B,mBAGNK,EAHM,KAGGC,EAHH,KAKb,OACE,sBAAKf,UAAU,6DAAf,UACE,cAAC,EAAD,IACA,sBAAKA,UAAU,6CAAf,UACE,qBAAKA,UAAU,qBAAf,SACE,mBAAGA,UAAU,oCAAb,iEAEJ,qBAAKA,UAAU,oHAAf,SACI,cAAC,IAAD,CAAUgB,OAAO,OAAOC,SAAU,EAAGC,QAAS,QAAiBC,OAAQ,SAAAC,GACrE,GAAIA,EAAaC,OAAS,EAAG,CAC3BV,GAAW,GACX,IAAIW,EAAW,IAAIC,SACnBD,EAASE,OAAO,OAAQJ,EAAa,GAAIA,EAAa,GAAGK,MAQzDC,MAAM,QANe,CACnBC,OAAQ,OACRC,KAAMN,EACNO,SAAU,WAITC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJtB,GAAW,GACXuB,IAAaD,EAAD,UAAYb,EAAa,GAAGK,KAAKU,QAAQ,OAAQ,gBAAjD,UACZpB,GAAW,GACXqB,YAAW,WACTrB,GAAW,KACV,QAEJsB,OAAM,SAAAzB,GAAK,OAAI0B,QAAQC,IAAI,QAAS3B,WAEvCC,GAAS,GACTuB,YAAW,WACTvB,GAAS,KACR,MA3BP,SA+BH,gBAAE2B,EAAF,EAAEA,aAAcC,EAAhB,EAAgBA,cAAhB,OACC,yBAASzC,UAAU,SAAnB,SACQ,gDAASwC,EAAa,CAACxC,UAAU,sDAAjC,cACJ,qCAAWyC,EAAc,CAACzC,UAAU,aACpC,mBAAGA,UAAU,MAAb,yFAMHY,GACC,cAAC,EAAD,IAEDF,GACC,cAAC,EAAD,IAEDI,GACC,cAAC,EAAD,IAEF,qBAAKd,UAAU,8CAAf,SACE,oBAAGC,KAAK,0BAA0BE,OAAO,SAASD,IAAI,sBAAtD,uBAAsF,sBAAMF,UAAU,eAAhB,oBAAtF,gCCnEV0C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.95411d00.chunk.js","sourcesContent":["import React from 'react'\n\nfunction Navbar() {\n    return (\n        <nav className=\"bg-white pb-4\">\n            <div className=\"mx-auto px-4 sm:px-6 lg:px-8\">\n            <div className=\"flex items-center justify-between h-10 text-black border-b-2 border-gray-100\">\n                <div className=\"flex items-center\">\n                        <span className=\"font-semibold text-xl tracking-tight\"><a href=\"/\"><span className='text-indigo-600'>term</span>inolator</a></span>\n                </div>\n                    <span className=\"font-light text-base font-mono hover:underline\"><a href=\"https://github.com/ataknz/terminolator.web\" rel='noopener noreferrer' target='_blank'>github-repo</a></span>\n            </div>\n            </div>\n        </nav>\n    )\n}\n\nexport default Navbar\n","import React from 'react'\n\nfunction Error() {\n    return (\n        <div className=\"w-3/4 h-1/4 bg-red-200 border-l-4 border-red-500 text-red-500 p-3\" role=\"alert\">\n            <p className=\"font-bold\">Upload Failed</p>\n            <p>Please make sure you are using a file with \".txt\" extension.</p>\n        </div>\n    )\n}\n\nexport default Error\n","import React from 'react'\n\nfunction Loading() {\n    return (\n        <div className=\"w-3/4 h-1/4 bg-blue-200 border-l-4 border-blue-500 text-blue-500 p-3\" role=\"alert\">\n            <p className=\"font-bold\">Uploading File</p>\n            <p>Please wait, your terminology is being created.</p>\n        </div>\n    )\n}\n\nexport default Loading\n","import React from 'react'\n\nfunction Success() {\n    return (\n        <div className=\"w-3/4 h-1/4 bg-green-200 border-l-4 border-green-500 text-green-500 p-3\" role=\"alert\">\n            <p className=\"font-bold\">Download succeed</p>\n            <p>Enjoy your terminology, please make sure to revise it.</p>\n        </div>\n    )\n}\n\nexport default Success\n","import fileDownload from 'js-file-download'\nimport Dropzone from 'react-dropzone'\nimport Navbar from './components/Navbar'\nimport Error from './components/Error'\nimport Loading from './components/Loading'\nimport Success from './components/Success'\nimport {useState} from 'react'\n\nfunction App() {\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState(false)\n  const [success, setSuccess] = useState(false)\n  \n  return (\n    <div className=\"App mx-auto my-auto px-4 py-4 max-w-2xl min-w-min h-screen\">\n      <Navbar />\n      <div className='flex flex-col items-center h-2/3 space-y-6'>\n        <div className=\"w-3/4 h1/4 p-2 m-2\">\n          <p className=\"text-base font-medium text-center\">End cumbersome process of creating a terminology.</p>\n      </div>\n      <div className=\"flex flex-col items-center justify-center bg-gray-100 text-gray-500 shadow rounded-lg w-3/4 h-full cursor-pointer\">\n          <Dropzone accept=\".txt\" maxFiles={1} maxSize={5 * 1024 * 1024} onDrop={acceptedFile => {\n            if (acceptedFile.length > 0) {\n              setLoading(true)\n              var formdata = new FormData();\n              formdata.append(\"file\", acceptedFile[0], acceptedFile[0].name);\n              \n              var requestOptions = {\n                method: 'POST',\n                body: formdata,\n                redirect: 'follow'\n              };\n              \n              fetch(\"/api/\", requestOptions)\n                .then(response => response.blob())\n                .then(result => {\n                  setLoading(false)\n                  fileDownload(result, `${acceptedFile[0].name.replace('.txt', '_terminology')}.xlsx`)\n                  setSuccess(true)\n                  setTimeout(() => {\n                    setSuccess(false)\n                  }, 3000)\n                })\n                .catch(error => console.log('error', error));\n            } else {\n              setError(true)\n              setTimeout(() => {\n                setError(false)\n              }, 3000)\n            }\n       \n      }}>\n      {({getRootProps, getInputProps}) => (\n        <section className=\"h-full\">\n                <div {...getRootProps({className:\"flex flex-col items-center justify-center h-full\"})}>\n            <input {...getInputProps({className:\"h-full\"})} />\n            <p className=\"p-3\">Drag and drop a text file (\".txt\") here, or click to select one.</p>\n          </div>\n        </section>\n      )}\n          </Dropzone>\n        </div>\n        {error && (\n          <Error />\n        ) }\n        {loading && (\n          <Loading />\n        )}\n        {success && (\n          <Success />\n        )}\n        <div className=\"text-indigo-600 font-medium hover:underline\">\n          <a href=\"https://atakanzengin.me\" target=\"_blank\" rel=\"noreferrer noopener\">Made with <span className=\"text-red-500\">&#9829;</span> by Atakan Zengin</a>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}